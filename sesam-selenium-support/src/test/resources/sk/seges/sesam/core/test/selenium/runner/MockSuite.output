package sk.seges.sesam.core.test.selenium.runner;

import javax.annotation.Generated;

import sk.seges.sesam.core.test.selenium.runner.MockSuiteRunner;
import sk.seges.sesam.core.test.selenium.runner.SeleniumSuiteRunner;
import sk.seges.sesam.core.test.selenium.usecase.MockSelenise;

@Generated(value = "sk.seges.sesam.pap.test.selenium.processor.SeleniumSuiteRunnerProcessor")
public class MockSuiteRunner extends SeleniumSuiteRunner {

	public static void main(String[] args) {
		new MockSuiteRunner().run();
	}

	public void run() {

		try {
			MockSelenise mockSelenise = new MockSelenise();
			getPrinter(mockSelenise).initialize(getTestResult(mockSelenise));
			mockSelenise.setUp();
			try {
				mockSelenise.testMethod1();
			} catch (Exception ex) {
				System.out.println(ex);
			} finally {
				mockSelenise.tearDown();
				getTestResult(mockSelenise).addTestCaseResult(mockSelenise.getTestInfo());
			}
		} catch (Exception ex) {
			System.out.println(ex);
		}
		try {
			MockSelenise mockSelenise = new MockSelenise();
			getPrinter(mockSelenise).initialize(getTestResult(mockSelenise));
			mockSelenise.setUp();
			try {
				mockSelenise.testMethod2();
			} catch (Exception ex) {
				System.out.println(ex);
			} finally {
				mockSelenise.tearDown();
				getTestResult(mockSelenise).addTestCaseResult(mockSelenise.getTestInfo());
			}
		} catch (Exception ex) {
			System.out.println(ex);
		}
		printReports();
	}
	
}